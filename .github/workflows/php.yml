name: Powergrid Tests

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - "art/**"
      - "README.md"
  pull_request:
    types: [ready_for_review, synchronize, opened]
    paths-ignore:
      - "art/**"
      - "README.md"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: powergridtest
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: powergridtest
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        php: [ 8.2 ]
        laravel: [ 10.* ]
        dependency-version: [ prefer-stable ]

    name: PHP:${{ matrix.php }} / L:${{ matrix.laravel }}

    if: github.ref != 'refs/heads/todo-tests'

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: $(composer config cache-files-dir)
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          rm composer.lock
          composer install

#      - name: Install openspout/openspout
#        if: matrix.php == '8.2'
#        run: composer require openspout/openspout

#      - name: Pint
#        if: matrix.php == '8.1'
#        run: composer test:pint
#
#      - name: Larastan
#        run: composer test:types
#
#      - name: SQLite
#        run: composer test:sqlite
#
#      - name: MySQL
#        run: composer test:mysql
#
#      - name: PostGreSQL
#        run: composer test:pgsql

      - name: Cypress
        run: |
          npm install
          cd tests/cypress && git clone https://github.com/Power-Components/powergrid-demo-misc.git app
          cp ./tests/cypress/stubs/CypressTable.php ./tests/cypress/app/app/Livewire/CypressTable.php
          cp ./tests/cypress/stubs/rules-controllers.blade.php ./tests/cypress/app/resources/views/components/header/rules-controllers.blade.php
          chmod +x ./tests/cypress/run.sh
          ./tests/cypress/run.sh
          cd app && php artisan serve & sleep 5 &
          cd tests/cypress && npx cypress run
        shell: bash
