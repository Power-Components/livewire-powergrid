name: Powergrid Tests

on:
  push:
    branches:
      - main
      - dev

  pull_request:
    types: [ ready_for_review, synchronize, opened ]
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: powergridtest
        ports:
         - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: powergridtest
        ports:
        - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      matrix:
        php: [ 8.1, 8.0 ]
        laravel: [ 10.*, 9.*, ^8.75 ]
        dependency-version: [ prefer-stable ]
        include:
          - laravel: 10.*
            testbench: 8.*
          - laravel: 9.*
            testbench: 7.*
          - laravel: ^8.75
            testbench: 6.*
        exclude:
          - php: 8.0
            laravel: 10.*

    name: PHP:${{ matrix.php }} / L:${{ matrix.laravel }}(${{ matrix.dependency-version }})

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          tools: composer:v2
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-

      - name: Install Composer dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Cs Fixer
        if: matrix.php == '8.1'
        run: ./vendor/bin/php-cs-fixer fix --verbose --dry-run --using-cache=no --stop-on-violation

      - name: Larastan
        run: git update-index --chmod=+x ./larastan.sh && bash ./larastan.sh

      - name: Testing with SQLite
        run: |
          ./vendor/bin/pest --configuration phpunit.sqlite.xml

      - name: Testing with MySQL
        run: |
            ./vendor/bin/pest --configuration phpunit.mysql.xml

      - name: Testing with PostgreSQL
        run: |
            ./vendor/bin/pest --configuration phpunit.pgsql.xml
